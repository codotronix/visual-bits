{"version":3,"sources":["components/pages/basics/DecBinRow.js","routes.js","components/pages/basics/Basics.js","components/layout/header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["initVal","dec","bin","DecBinRow","props","name","useState","value","setValue","handleShift","direction","converDecToBin8bitString","n","toString","padStart","className","htmlFor","type","id","onChange","e","parseInt","target","isNaN","alert","split","map","b","i","val","join","onChangeBin","onClick","routes","path","component","to","Header","App","basename","r","exact","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEMA,EAAU,CACZC,IAAK,EACLC,IAAK,YA+FMC,EA5FG,SAAAC,GAAU,IAChBC,EAASD,EAATC,KADe,EAEGC,mBAASN,GAFZ,mBAEhBO,EAFgB,KAETC,EAFS,KA4BjBC,EAAc,SAAAC,GAChB,IAAMT,EAAoB,SAAdS,EAAuBH,EAAMN,KAAO,EAAIM,EAAMN,KAAO,EAC3DC,EAAMS,EAAyBV,GACrCO,EAAS,CAAEP,MAAKC,SAQdS,EAA2B,SAAAC,GAAC,OAAIA,EAAEC,SAAS,GAAGC,SAAS,EAAG,MAEhE,OACI,sBAAKC,UAAU,yBAAf,UACI,qBAAKA,UAAU,0BAAf,SAA0CV,IAC1C,qBAAKU,UAAU,qBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,QAAS,UAAUX,EAA1B,iBACA,uBAAOY,KAAK,OACRF,UAAU,eACVG,GAAI,UAAUb,EACdE,MAAOA,EAAMN,IACbkB,SA/CA,SAAAC,GAChB,IAAMnB,EAAMoB,SAASD,EAAEE,OAAOf,OAC9B,IAAGgB,MAAMtB,GAAT,CAEK,GAAGA,EAAM,GAAKA,EAAM,IAAK,OAAOuB,MAAM,yDAGvC,IAAMtB,EAAMS,EAAyBV,GACrCO,EAAS,CAAEP,MAAKC,iBA2ChB,qBAAKa,UAAU,qCAAf,SAEQR,EAAML,IAAIuB,MAAM,IAAIC,KAAK,SAACC,EAAGC,GAAJ,OACzB,sBAAKb,UAAU,kBAAf,UACI,wBAAOC,QAAO,eAAUX,EAAV,YAAkB,EAAEuB,GAAlC,cAAwC,8BAAM,EAAEA,OAChD,uBACIX,KAAK,OACLF,UAAU,eACVG,GAAE,eAAUb,EAAV,YAAkB,EAAEuB,GACtBrB,MAAOoB,EACPR,SAAU,SAAAC,GAAC,OAjDf,SAACA,EAAGQ,GACpB,IAAMC,EAAMR,SAASD,EAAEE,OAAOf,OAC9B,GAAIgB,MAAMM,IAAQA,EAAM,GAAKA,EAAM,EAAI,OAAOL,MAAM,wCAEpD,IAAItB,EAAMK,EAAML,IAAIuB,MAAM,IAC1BvB,EAAI0B,GAAKC,EACT3B,EAAMA,EAAI4B,KAAK,IAEf,IAAM7B,EAAMoB,SAASnB,EAAK,GAC1BM,EAAS,CAAEP,MAAKC,QAwCmB6B,CAAYX,EAAGQ,QAPAA,QAc9C,sBAAKb,UAAU,sBAAf,UACI,yBACIE,KAAK,SACLF,UAAU,kBACViB,QAAS,kBAAMvB,EAAY,SAH/B,UAKI,mBAAGM,UAAU,6BALjB,iBAOA,yBACIE,KAAK,SACLF,UAAU,uBACViB,QAAS,kBAAMvB,EAAY,UAH/B,yBAKgB,mBAAGM,UAAU,wCC1E9BkB,EAfA,CACX,CACIC,KAAM,IACNC,UAAW,kBAAM,cAAC,IAAD,CAAUC,GAAG,cAElC,CACIF,KAAM,UACNC,UCRO,SAAA/B,GACX,OACI,gCACI,cAAC,EAAD,CAAWC,KAAK,MAChB,cAAC,EAAD,CAAWA,KAAK,WDMxB,CACI6B,KAAM,MACNC,UAAW,kBAAM,cAAC,IAAD,CAAUC,GAAG,SENvBC,EARA,SAAAjC,GACX,OACI,qBAAKW,UAAU,gBAAf,SACI,sBAAMA,UAAU,YAAhB,4BCsBGuB,MArBf,WACE,OACE,gCAEE,iCACE,cAAC,EAAD,MAGF,qBAAKvB,UAAU,iCAAf,SACE,cAAC,IAAD,CAAQwB,SAAS,eAAjB,SACE,cAAC,IAAD,UAEIN,EAAOP,KAAI,SAAAc,GAAC,OAAI,wBAAC,IAAD,2BAAWA,GAAX,IAAcC,OAAK,EAACC,IAAKF,EAAEN,qBCJ1CS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.28652bff.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst initVal = {\r\n    dec: 0,\r\n    bin: '00000000'\r\n}\r\n\r\nconst DecBinRow = props => {\r\n    const { name } = props\r\n    const [value, setValue] = useState(initVal)\r\n\r\n    const onChangeDec = e => {\r\n        const dec = parseInt(e.target.value)\r\n        if(isNaN(dec)) return\r\n\r\n        else if(dec < 0 || dec > 255) return alert('The decimal number must be in the range 0 <= n <= 255')\r\n\r\n        else {\r\n            const bin = converDecToBin8bitString(dec)\r\n            setValue({ dec, bin })\r\n        }\r\n    }\r\n\r\n    const onChangeBin = (e, i) => {\r\n        const val = parseInt(e.target.value)\r\n        if( isNaN(val) || val < 0 || val > 1 ) return alert('A binary digit must be either 0 or 1')\r\n\r\n        let bin = value.bin.split('')\r\n        bin[i] = val\r\n        bin = bin.join('')\r\n\r\n        const dec = parseInt(bin, 2)\r\n        setValue({ dec, bin })\r\n    }\r\n\r\n    const handleShift = direction => {\r\n        const dec = direction === 'LEFT' ? value.dec << 1 : value.dec >> 1\r\n        const bin = converDecToBin8bitString(dec)\r\n        setValue({ dec, bin })\r\n    }\r\n\r\n    /**\r\n     * Supply it a decimal integer and\r\n     * it will return an 8 bit binary string\r\n     * @param {*} n \r\n     */\r\n    const converDecToBin8bitString = n => n.toString(2).padStart(8, '0')\r\n\r\n    return (\r\n        <div className=\"row dec-bin-row shadow\">\r\n            <div className=\"col-sm-12 col-md-2 name\">{name}</div>\r\n            <div className=\"col-sm-12 col-md-2\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor={'decimal'+name}>Dec</label>\r\n                    <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        id={'decimal'+name} \r\n                        value={value.dec} \r\n                        onChange={onChangeDec}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-8 d-flex binaries\">\r\n                {\r\n                    value.bin.split('').map( (b, i) =>\r\n                    <div className=\"form-group mr-2\" key={i}>\r\n                        <label htmlFor={`bits-${name}-${7-i}`}>2<sup>{7-i}</sup></label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id={`bits-${name}-${8-i}`} \r\n                            value={b} \r\n                            onChange={e => onChangeBin(e, i)}\r\n                        />\r\n                    </div>\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"col-sm-12 btn-panel\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\" \r\n                    onClick={() => handleShift('LEFT')}\r\n                >\r\n                    <i className=\"fas fa-angle-double-left\"></i> Left Shift \r\n                </button>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary ml-2\"\r\n                    onClick={() => handleShift('RIGHT')}\r\n                > \r\n                    Right Shift <i className=\"fas fa-angle-double-right\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DecBinRow","import { Basics } from './components/pages'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: () => <Redirect to=\"/basics\" />\r\n    },\r\n    {\r\n        path: '/basics',\r\n        component: Basics\r\n    },\r\n    {\r\n        path: '/**',\r\n        component: () => <Redirect to=\"/\" />\r\n    }\r\n]\r\n\r\nexport default routes","import DecBinRow from './DecBinRow'\r\n\r\nconst Basics = props => {\r\n    return (\r\n        <div>\r\n            <DecBinRow name=\"A\" />\r\n            <DecBinRow name=\"B\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Basics","const Header = props => {\r\n    return (\r\n        <div className=\"header shadow\">\r\n            <span className=\"logo-text\">Visual Bits</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport routes from './routes'\r\nimport { Header } from './components/layout'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      \r\n      <header>\r\n        <Header />\r\n      </header>\r\n\r\n      <div className=\"main-container container-fluid\">\r\n        <Router basename=\"/visual-bits\">\r\n          <Switch>\r\n            {\r\n              routes.map(r => <Route {...r} exact key={r.path} />)\r\n            }\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}